
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004ec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000004c  00800060  000004ec  00000560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000005ac  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  00000618  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001485  00000000  00000000  000006e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008fb  00000000  00000000  00001b65  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000086b  00000000  00000000  00002460  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000013c  00000000  00000000  00002ccc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006df  00000000  00000000  00002e08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b28  00000000  00000000  000034e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  0000400f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ee       	ldi	r30, 0xEC	; 236
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 3a       	cpi	r26, 0xAC	; 172
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 3c 02 	call	0x478	; 0x478 <main>
  7a:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <Dio_WritePort>:
  82:	81 30       	cpi	r24, 0x01	; 1
  84:	41 f0       	breq	.+16     	; 0x96 <Dio_WritePort+0x14>
  86:	28 f0       	brcs	.+10     	; 0x92 <Dio_WritePort+0x10>
  88:	82 30       	cpi	r24, 0x02	; 2
  8a:	39 f0       	breq	.+14     	; 0x9a <Dio_WritePort+0x18>
  8c:	83 30       	cpi	r24, 0x03	; 3
  8e:	39 f0       	breq	.+14     	; 0x9e <Dio_WritePort+0x1c>
  90:	08 95       	ret
  92:	6b bb       	out	0x1b, r22	; 27
  94:	08 95       	ret
  96:	68 bb       	out	0x18, r22	; 24
  98:	08 95       	ret
  9a:	65 bb       	out	0x15, r22	; 21
  9c:	08 95       	ret
  9e:	62 bb       	out	0x12, r22	; 18
  a0:	08 95       	ret

000000a2 <Dio_WriteChannel>:
  a2:	98 2f       	mov	r25, r24
  a4:	97 70       	andi	r25, 0x07	; 7
  a6:	86 95       	lsr	r24
  a8:	86 95       	lsr	r24
  aa:	86 95       	lsr	r24
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	21 f1       	breq	.+72     	; 0xf8 <Dio_WriteChannel+0x56>
  b0:	30 f0       	brcs	.+12     	; 0xbe <Dio_WriteChannel+0x1c>
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	f1 f1       	breq	.+124    	; 0x132 <Dio_WriteChannel+0x90>
  b6:	83 30       	cpi	r24, 0x03	; 3
  b8:	09 f4       	brne	.+2      	; 0xbc <Dio_WriteChannel+0x1a>
  ba:	58 c0       	rjmp	.+176    	; 0x16c <Dio_WriteChannel+0xca>
  bc:	08 95       	ret
  be:	61 11       	cpse	r22, r1
  c0:	0e c0       	rjmp	.+28     	; 0xde <Dio_WriteChannel+0x3c>
  c2:	4b b3       	in	r20, 0x1b	; 27
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	b9 01       	movw	r22, r18
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <Dio_WriteChannel+0x2e>
  cc:	66 0f       	add	r22, r22
  ce:	77 1f       	adc	r23, r23
  d0:	9a 95       	dec	r25
  d2:	e2 f7       	brpl	.-8      	; 0xcc <Dio_WriteChannel+0x2a>
  d4:	cb 01       	movw	r24, r22
  d6:	80 95       	com	r24
  d8:	84 23       	and	r24, r20
  da:	8b bb       	out	0x1b, r24	; 27
  dc:	08 95       	ret
  de:	4b b3       	in	r20, 0x1b	; 27
  e0:	21 e0       	ldi	r18, 0x01	; 1
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	b9 01       	movw	r22, r18
  e6:	02 c0       	rjmp	.+4      	; 0xec <Dio_WriteChannel+0x4a>
  e8:	66 0f       	add	r22, r22
  ea:	77 1f       	adc	r23, r23
  ec:	9a 95       	dec	r25
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <Dio_WriteChannel+0x46>
  f0:	cb 01       	movw	r24, r22
  f2:	84 2b       	or	r24, r20
  f4:	8b bb       	out	0x1b, r24	; 27
  f6:	08 95       	ret
  f8:	61 11       	cpse	r22, r1
  fa:	0e c0       	rjmp	.+28     	; 0x118 <Dio_WriteChannel+0x76>
  fc:	48 b3       	in	r20, 0x18	; 24
  fe:	21 e0       	ldi	r18, 0x01	; 1
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	b9 01       	movw	r22, r18
 104:	02 c0       	rjmp	.+4      	; 0x10a <Dio_WriteChannel+0x68>
 106:	66 0f       	add	r22, r22
 108:	77 1f       	adc	r23, r23
 10a:	9a 95       	dec	r25
 10c:	e2 f7       	brpl	.-8      	; 0x106 <Dio_WriteChannel+0x64>
 10e:	cb 01       	movw	r24, r22
 110:	80 95       	com	r24
 112:	84 23       	and	r24, r20
 114:	88 bb       	out	0x18, r24	; 24
 116:	08 95       	ret
 118:	48 b3       	in	r20, 0x18	; 24
 11a:	21 e0       	ldi	r18, 0x01	; 1
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	b9 01       	movw	r22, r18
 120:	02 c0       	rjmp	.+4      	; 0x126 <Dio_WriteChannel+0x84>
 122:	66 0f       	add	r22, r22
 124:	77 1f       	adc	r23, r23
 126:	9a 95       	dec	r25
 128:	e2 f7       	brpl	.-8      	; 0x122 <Dio_WriteChannel+0x80>
 12a:	cb 01       	movw	r24, r22
 12c:	84 2b       	or	r24, r20
 12e:	88 bb       	out	0x18, r24	; 24
 130:	08 95       	ret
 132:	61 11       	cpse	r22, r1
 134:	0e c0       	rjmp	.+28     	; 0x152 <Dio_WriteChannel+0xb0>
 136:	45 b3       	in	r20, 0x15	; 21
 138:	21 e0       	ldi	r18, 0x01	; 1
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	b9 01       	movw	r22, r18
 13e:	02 c0       	rjmp	.+4      	; 0x144 <Dio_WriteChannel+0xa2>
 140:	66 0f       	add	r22, r22
 142:	77 1f       	adc	r23, r23
 144:	9a 95       	dec	r25
 146:	e2 f7       	brpl	.-8      	; 0x140 <Dio_WriteChannel+0x9e>
 148:	cb 01       	movw	r24, r22
 14a:	80 95       	com	r24
 14c:	84 23       	and	r24, r20
 14e:	85 bb       	out	0x15, r24	; 21
 150:	08 95       	ret
 152:	45 b3       	in	r20, 0x15	; 21
 154:	21 e0       	ldi	r18, 0x01	; 1
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	b9 01       	movw	r22, r18
 15a:	02 c0       	rjmp	.+4      	; 0x160 <Dio_WriteChannel+0xbe>
 15c:	66 0f       	add	r22, r22
 15e:	77 1f       	adc	r23, r23
 160:	9a 95       	dec	r25
 162:	e2 f7       	brpl	.-8      	; 0x15c <Dio_WriteChannel+0xba>
 164:	cb 01       	movw	r24, r22
 166:	84 2b       	or	r24, r20
 168:	85 bb       	out	0x15, r24	; 21
 16a:	08 95       	ret
 16c:	61 11       	cpse	r22, r1
 16e:	0e c0       	rjmp	.+28     	; 0x18c <Dio_WriteChannel+0xea>
 170:	42 b3       	in	r20, 0x12	; 18
 172:	21 e0       	ldi	r18, 0x01	; 1
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	b9 01       	movw	r22, r18
 178:	02 c0       	rjmp	.+4      	; 0x17e <Dio_WriteChannel+0xdc>
 17a:	66 0f       	add	r22, r22
 17c:	77 1f       	adc	r23, r23
 17e:	9a 95       	dec	r25
 180:	e2 f7       	brpl	.-8      	; 0x17a <Dio_WriteChannel+0xd8>
 182:	cb 01       	movw	r24, r22
 184:	80 95       	com	r24
 186:	84 23       	and	r24, r20
 188:	82 bb       	out	0x12, r24	; 18
 18a:	08 95       	ret
 18c:	42 b3       	in	r20, 0x12	; 18
 18e:	21 e0       	ldi	r18, 0x01	; 1
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	b9 01       	movw	r22, r18
 194:	02 c0       	rjmp	.+4      	; 0x19a <Dio_WriteChannel+0xf8>
 196:	66 0f       	add	r22, r22
 198:	77 1f       	adc	r23, r23
 19a:	9a 95       	dec	r25
 19c:	e2 f7       	brpl	.-8      	; 0x196 <Dio_WriteChannel+0xf4>
 19e:	cb 01       	movw	r24, r22
 1a0:	84 2b       	or	r24, r20
 1a2:	82 bb       	out	0x12, r24	; 18
 1a4:	08 95       	ret

000001a6 <Dio_init>:
 1a6:	e0 e6       	ldi	r30, 0x60	; 96
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	41 e0       	ldi	r20, 0x01	; 1
 1ae:	50 e0       	ldi	r21, 0x00	; 0
 1b0:	98 2f       	mov	r25, r24
 1b2:	96 95       	lsr	r25
 1b4:	96 95       	lsr	r25
 1b6:	96 95       	lsr	r25
 1b8:	38 2f       	mov	r19, r24
 1ba:	37 70       	andi	r19, 0x07	; 7
 1bc:	20 81       	ld	r18, Z
 1be:	21 30       	cpi	r18, 0x01	; 1
 1c0:	a1 f5       	brne	.+104    	; 0x22a <Dio_init+0x84>
 1c2:	91 30       	cpi	r25, 0x01	; 1
 1c4:	89 f0       	breq	.+34     	; 0x1e8 <Dio_init+0x42>
 1c6:	28 f0       	brcs	.+10     	; 0x1d2 <Dio_init+0x2c>
 1c8:	92 30       	cpi	r25, 0x02	; 2
 1ca:	c9 f0       	breq	.+50     	; 0x1fe <Dio_init+0x58>
 1cc:	93 30       	cpi	r25, 0x03	; 3
 1ce:	11 f1       	breq	.+68     	; 0x214 <Dio_init+0x6e>
 1d0:	63 c0       	rjmp	.+198    	; 0x298 <Dio_init+0xf2>
 1d2:	9a b3       	in	r25, 0x1a	; 26
 1d4:	ba 01       	movw	r22, r20
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <Dio_init+0x36>
 1d8:	66 0f       	add	r22, r22
 1da:	77 1f       	adc	r23, r23
 1dc:	3a 95       	dec	r19
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <Dio_init+0x32>
 1e0:	9b 01       	movw	r18, r22
 1e2:	29 2b       	or	r18, r25
 1e4:	2a bb       	out	0x1a, r18	; 26
 1e6:	58 c0       	rjmp	.+176    	; 0x298 <Dio_init+0xf2>
 1e8:	97 b3       	in	r25, 0x17	; 23
 1ea:	ba 01       	movw	r22, r20
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <Dio_init+0x4c>
 1ee:	66 0f       	add	r22, r22
 1f0:	77 1f       	adc	r23, r23
 1f2:	3a 95       	dec	r19
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <Dio_init+0x48>
 1f6:	9b 01       	movw	r18, r22
 1f8:	29 2b       	or	r18, r25
 1fa:	27 bb       	out	0x17, r18	; 23
 1fc:	4d c0       	rjmp	.+154    	; 0x298 <Dio_init+0xf2>
 1fe:	94 b3       	in	r25, 0x14	; 20
 200:	ba 01       	movw	r22, r20
 202:	02 c0       	rjmp	.+4      	; 0x208 <Dio_init+0x62>
 204:	66 0f       	add	r22, r22
 206:	77 1f       	adc	r23, r23
 208:	3a 95       	dec	r19
 20a:	e2 f7       	brpl	.-8      	; 0x204 <Dio_init+0x5e>
 20c:	9b 01       	movw	r18, r22
 20e:	29 2b       	or	r18, r25
 210:	24 bb       	out	0x14, r18	; 20
 212:	42 c0       	rjmp	.+132    	; 0x298 <Dio_init+0xf2>
 214:	91 b3       	in	r25, 0x11	; 17
 216:	ba 01       	movw	r22, r20
 218:	02 c0       	rjmp	.+4      	; 0x21e <Dio_init+0x78>
 21a:	66 0f       	add	r22, r22
 21c:	77 1f       	adc	r23, r23
 21e:	3a 95       	dec	r19
 220:	e2 f7       	brpl	.-8      	; 0x21a <Dio_init+0x74>
 222:	9b 01       	movw	r18, r22
 224:	29 2b       	or	r18, r25
 226:	21 bb       	out	0x11, r18	; 17
 228:	37 c0       	rjmp	.+110    	; 0x298 <Dio_init+0xf2>
 22a:	91 30       	cpi	r25, 0x01	; 1
 22c:	91 f0       	breq	.+36     	; 0x252 <Dio_init+0xac>
 22e:	28 f0       	brcs	.+10     	; 0x23a <Dio_init+0x94>
 230:	92 30       	cpi	r25, 0x02	; 2
 232:	d9 f0       	breq	.+54     	; 0x26a <Dio_init+0xc4>
 234:	93 30       	cpi	r25, 0x03	; 3
 236:	29 f1       	breq	.+74     	; 0x282 <Dio_init+0xdc>
 238:	2f c0       	rjmp	.+94     	; 0x298 <Dio_init+0xf2>
 23a:	2a b3       	in	r18, 0x1a	; 26
 23c:	ba 01       	movw	r22, r20
 23e:	02 c0       	rjmp	.+4      	; 0x244 <Dio_init+0x9e>
 240:	66 0f       	add	r22, r22
 242:	77 1f       	adc	r23, r23
 244:	3a 95       	dec	r19
 246:	e2 f7       	brpl	.-8      	; 0x240 <Dio_init+0x9a>
 248:	96 2f       	mov	r25, r22
 24a:	90 95       	com	r25
 24c:	92 23       	and	r25, r18
 24e:	9a bb       	out	0x1a, r25	; 26
 250:	23 c0       	rjmp	.+70     	; 0x298 <Dio_init+0xf2>
 252:	27 b3       	in	r18, 0x17	; 23
 254:	ba 01       	movw	r22, r20
 256:	02 c0       	rjmp	.+4      	; 0x25c <Dio_init+0xb6>
 258:	66 0f       	add	r22, r22
 25a:	77 1f       	adc	r23, r23
 25c:	3a 95       	dec	r19
 25e:	e2 f7       	brpl	.-8      	; 0x258 <Dio_init+0xb2>
 260:	96 2f       	mov	r25, r22
 262:	90 95       	com	r25
 264:	92 23       	and	r25, r18
 266:	97 bb       	out	0x17, r25	; 23
 268:	17 c0       	rjmp	.+46     	; 0x298 <Dio_init+0xf2>
 26a:	24 b3       	in	r18, 0x14	; 20
 26c:	ba 01       	movw	r22, r20
 26e:	02 c0       	rjmp	.+4      	; 0x274 <Dio_init+0xce>
 270:	66 0f       	add	r22, r22
 272:	77 1f       	adc	r23, r23
 274:	3a 95       	dec	r19
 276:	e2 f7       	brpl	.-8      	; 0x270 <Dio_init+0xca>
 278:	96 2f       	mov	r25, r22
 27a:	90 95       	com	r25
 27c:	92 23       	and	r25, r18
 27e:	94 bb       	out	0x14, r25	; 20
 280:	0b c0       	rjmp	.+22     	; 0x298 <Dio_init+0xf2>
 282:	21 b3       	in	r18, 0x11	; 17
 284:	ba 01       	movw	r22, r20
 286:	02 c0       	rjmp	.+4      	; 0x28c <Dio_init+0xe6>
 288:	66 0f       	add	r22, r22
 28a:	77 1f       	adc	r23, r23
 28c:	3a 95       	dec	r19
 28e:	e2 f7       	brpl	.-8      	; 0x288 <Dio_init+0xe2>
 290:	96 2f       	mov	r25, r22
 292:	90 95       	com	r25
 294:	92 23       	and	r25, r18
 296:	91 bb       	out	0x11, r25	; 17
 298:	8f 5f       	subi	r24, 0xFF	; 255
 29a:	32 96       	adiw	r30, 0x02	; 2
 29c:	80 32       	cpi	r24, 0x20	; 32
 29e:	09 f0       	breq	.+2      	; 0x2a2 <Dio_init+0xfc>
 2a0:	87 cf       	rjmp	.-242    	; 0x1b0 <Dio_init+0xa>
 2a2:	08 95       	ret

000002a4 <LCD_WriteCommand>:
		String++;
	}
}

void LCD_WriteCommand(uint8 Command)
{   
 2a4:	cf 93       	push	r28
 2a6:	c8 2f       	mov	r28, r24
	LCD_Port_Data = (LCD_Port_Data & 0x0F) | (Command & 0xF0);
 2a8:	8b b3       	in	r24, 0x1b	; 27
 2aa:	9c 2f       	mov	r25, r28
 2ac:	90 7f       	andi	r25, 0xF0	; 240
 2ae:	8f 70       	andi	r24, 0x0F	; 15
 2b0:	89 2b       	or	r24, r25
 2b2:	8b bb       	out	0x1b, r24	; 27
	Dio_WritePort(Dio_Port_A,((LCD_Port_Data & 0x0F) | (Command & 0xF0)));
 2b4:	6b b3       	in	r22, 0x1b	; 27
 2b6:	6f 70       	andi	r22, 0x0F	; 15
 2b8:	69 2b       	or	r22, r25
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	0e 94 41 00 	call	0x82	; 0x82 <Dio_WritePort>
	Dio_WritePort(LCD_Dir_Control,STD_low);
 2c0:	87 b3       	in	r24, 0x17	; 23
 2c2:	60 e0       	ldi	r22, 0x00	; 0
 2c4:	0e 94 41 00 	call	0x82	; 0x82 <Dio_WritePort>
	Dio_WriteChannel(RS,STD_low);
 2c8:	60 e0       	ldi	r22, 0x00	; 0
 2ca:	89 e0       	ldi	r24, 0x09	; 9
 2cc:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
	Dio_WriteChannel(EN,STD_high);
 2d0:	61 e0       	ldi	r22, 0x01	; 1
 2d2:	8b e0       	ldi	r24, 0x0B	; 11
 2d4:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d8:	8f e3       	ldi	r24, 0x3F	; 63
 2da:	9c e9       	ldi	r25, 0x9C	; 156
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <LCD_WriteCommand+0x38>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <LCD_WriteCommand+0x3e>
 2e2:	00 00       	nop
	_delay_ms(10);
	Dio_WriteChannel(EN,STD_low);	
 2e4:	60 e0       	ldi	r22, 0x00	; 0
 2e6:	8b e0       	ldi	r24, 0x0B	; 11
 2e8:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
 2ec:	8f e3       	ldi	r24, 0x3F	; 63
 2ee:	9c e9       	ldi	r25, 0x9C	; 156
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <LCD_WriteCommand+0x4c>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <LCD_WriteCommand+0x52>
 2f6:	00 00       	nop
    _delay_ms(10);
	Dio_WritePort(Dio_Port_A,((LCD_Port_Data & 0x0F) | (Command << 4)));
 2f8:	6b b3       	in	r22, 0x1b	; 27
 2fa:	6f 70       	andi	r22, 0x0F	; 15
 2fc:	20 e1       	ldi	r18, 0x10	; 16
 2fe:	c2 9f       	mul	r28, r18
 300:	c0 01       	movw	r24, r0
 302:	11 24       	eor	r1, r1
 304:	68 2b       	or	r22, r24
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	0e 94 41 00 	call	0x82	; 0x82 <Dio_WritePort>
	Dio_WriteChannel(EN,STD_high);
 30c:	61 e0       	ldi	r22, 0x01	; 1
 30e:	8b e0       	ldi	r24, 0x0B	; 11
 310:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
 314:	8f e3       	ldi	r24, 0x3F	; 63
 316:	9c e9       	ldi	r25, 0x9C	; 156
 318:	01 97       	sbiw	r24, 0x01	; 1
 31a:	f1 f7       	brne	.-4      	; 0x318 <LCD_WriteCommand+0x74>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <LCD_WriteCommand+0x7a>
 31e:	00 00       	nop
	_delay_ms(10);
	Dio_WriteChannel(EN,STD_low);	
 320:	60 e0       	ldi	r22, 0x00	; 0
 322:	8b e0       	ldi	r24, 0x0B	; 11
 324:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
 328:	8f e3       	ldi	r24, 0x3F	; 63
 32a:	9c e9       	ldi	r25, 0x9C	; 156
 32c:	01 97       	sbiw	r24, 0x01	; 1
 32e:	f1 f7       	brne	.-4      	; 0x32c <LCD_WriteCommand+0x88>
 330:	00 c0       	rjmp	.+0      	; 0x332 <LCD_WriteCommand+0x8e>
 332:	00 00       	nop
	_delay_ms(10);	
}
 334:	cf 91       	pop	r28
 336:	08 95       	ret

00000338 <LCD_int>:



void LCD_int()
{ 
	LCD_Dir_Data=0xF0;     // data PORTA 4 to 7 pins
 338:	80 ef       	ldi	r24, 0xF0	; 240
 33a:	8a bb       	out	0x1a, r24	; 26
	LCD_Dir_Control=0x0F; // Control PORTB 0 tO 2  RS 1   RW 2   E 3 
 33c:	8f e0       	ldi	r24, 0x0F	; 15
 33e:	87 bb       	out	0x17, r24	; 23
 340:	2f ef       	ldi	r18, 0xFF	; 255
 342:	89 ef       	ldi	r24, 0xF9	; 249
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	21 50       	subi	r18, 0x01	; 1
 348:	80 40       	sbci	r24, 0x00	; 0
 34a:	90 40       	sbci	r25, 0x00	; 0
 34c:	e1 f7       	brne	.-8      	; 0x346 <LCD_int+0xe>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <LCD_int+0x18>
 350:	00 00       	nop
	_delay_ms(20);		/* LCD Power ON delay always >15ms */	
	LCD_WriteCommand(0x33); //3 3 3 2
 352:	83 e3       	ldi	r24, 0x33	; 51
 354:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
	LCD_WriteCommand(0x32);	/* Send for 4 bit initialization of LCD  */
 358:	82 e3       	ldi	r24, 0x32	; 50
 35a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
	LCD_WriteCommand(0x28);	/* 2 line, 5*8 matrix in 4-bit mode */
 35e:	88 e2       	ldi	r24, 0x28	; 40
 360:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
    LCD_WriteCommand(0x0c);	/* Display on cursor off */
 364:	8c e0       	ldi	r24, 0x0C	; 12
 366:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
	LCD_WriteCommand(0x06);	/* Increment cursor (shift cursor to right) */
 36a:	86 e0       	ldi	r24, 0x06	; 6
 36c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
	LCD_WriteCommand(0x01);	/* Clear display screen */
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
 376:	08 95       	ret

00000378 <LCD_Clear>:
}

void LCD_Clear(void)
{
	LCD_WriteCommand(0x01);
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
 37e:	8f e3       	ldi	r24, 0x3F	; 63
 380:	9c e9       	ldi	r25, 0x9C	; 156
 382:	01 97       	sbiw	r24, 0x01	; 1
 384:	f1 f7       	brne	.-4      	; 0x382 <LCD_Clear+0xa>
 386:	00 c0       	rjmp	.+0      	; 0x388 <LCD_Clear+0x10>
 388:	00 00       	nop
	_delay_ms(10);
	LCD_WriteCommand(0x80); // Yrg3 ll home
 38a:	80 e8       	ldi	r24, 0x80	; 128
 38c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
 390:	8f e3       	ldi	r24, 0x3F	; 63
 392:	9c e9       	ldi	r25, 0x9C	; 156
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <LCD_Clear+0x1c>
 398:	00 c0       	rjmp	.+0      	; 0x39a <LCD_Clear+0x22>
 39a:	00 00       	nop
 39c:	08 95       	ret

0000039e <LCD_WriteData>:
	Dio_WriteChannel(EN,STD_low);	
	_delay_ms(10);	
}

void LCD_WriteData(uint8 Data)
{
 39e:	cf 93       	push	r28
 3a0:	c8 2f       	mov	r28, r24
	LCD_Port_Data = (LCD_Port_Data & 0x0F) | (Data & 0xF0);
 3a2:	8b b3       	in	r24, 0x1b	; 27
 3a4:	9c 2f       	mov	r25, r28
 3a6:	90 7f       	andi	r25, 0xF0	; 240
 3a8:	8f 70       	andi	r24, 0x0F	; 15
 3aa:	89 2b       	or	r24, r25
 3ac:	8b bb       	out	0x1b, r24	; 27
	Dio_WritePort(Dio_Port_A,((LCD_Port_Data & 0x0F) | (Data & 0xF0)));
 3ae:	6b b3       	in	r22, 0x1b	; 27
 3b0:	6f 70       	andi	r22, 0x0F	; 15
 3b2:	69 2b       	or	r22, r25
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	0e 94 41 00 	call	0x82	; 0x82 <Dio_WritePort>
	Dio_WriteChannel(RS,STD_high);
 3ba:	61 e0       	ldi	r22, 0x01	; 1
 3bc:	89 e0       	ldi	r24, 0x09	; 9
 3be:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
	Dio_WriteChannel(EN,STD_high);
 3c2:	61 e0       	ldi	r22, 0x01	; 1
 3c4:	8b e0       	ldi	r24, 0x0B	; 11
 3c6:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
 3ca:	8f e3       	ldi	r24, 0x3F	; 63
 3cc:	9c e9       	ldi	r25, 0x9C	; 156
 3ce:	01 97       	sbiw	r24, 0x01	; 1
 3d0:	f1 f7       	brne	.-4      	; 0x3ce <LCD_WriteData+0x30>
 3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <LCD_WriteData+0x36>
 3d4:	00 00       	nop
	_delay_ms(10);
	Dio_WriteChannel(EN,STD_low);
 3d6:	60 e0       	ldi	r22, 0x00	; 0
 3d8:	8b e0       	ldi	r24, 0x0B	; 11
 3da:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
 3de:	8f e3       	ldi	r24, 0x3F	; 63
 3e0:	9c e9       	ldi	r25, 0x9C	; 156
 3e2:	01 97       	sbiw	r24, 0x01	; 1
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <LCD_WriteData+0x44>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <LCD_WriteData+0x4a>
 3e8:	00 00       	nop
	_delay_ms(10);
	Dio_WritePort(Dio_Port_A,((LCD_Port_Data & 0x0F) | (Data << 4)));
 3ea:	6b b3       	in	r22, 0x1b	; 27
 3ec:	6f 70       	andi	r22, 0x0F	; 15
 3ee:	20 e1       	ldi	r18, 0x10	; 16
 3f0:	c2 9f       	mul	r28, r18
 3f2:	c0 01       	movw	r24, r0
 3f4:	11 24       	eor	r1, r1
 3f6:	68 2b       	or	r22, r24
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	0e 94 41 00 	call	0x82	; 0x82 <Dio_WritePort>
	Dio_WriteChannel(EN,STD_high);
 3fe:	61 e0       	ldi	r22, 0x01	; 1
 400:	8b e0       	ldi	r24, 0x0B	; 11
 402:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
 406:	8f e3       	ldi	r24, 0x3F	; 63
 408:	9c e9       	ldi	r25, 0x9C	; 156
 40a:	01 97       	sbiw	r24, 0x01	; 1
 40c:	f1 f7       	brne	.-4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 40e:	00 c0       	rjmp	.+0      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 410:	00 00       	nop
	_delay_ms(10);
	Dio_WriteChannel(EN,STD_low);
 412:	60 e0       	ldi	r22, 0x00	; 0
 414:	8b e0       	ldi	r24, 0x0B	; 11
 416:	0e 94 51 00 	call	0xa2	; 0xa2 <Dio_WriteChannel>
 41a:	8f e3       	ldi	r24, 0x3F	; 63
 41c:	9c e9       	ldi	r25, 0x9C	; 156
 41e:	01 97       	sbiw	r24, 0x01	; 1
 420:	f1 f7       	brne	.-4      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 422:	00 c0       	rjmp	.+0      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 424:	00 00       	nop
	_delay_ms(10);
}
 426:	cf 91       	pop	r28
 428:	08 95       	ret

0000042a <LCD_WriteString>:
	LCD_WriteCommand(0x80); // Yrg3 ll home
	_delay_ms(10);
}

void LCD_WriteString(uint8 *String)
{
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	ec 01       	movw	r28, r24
	while((*String) != 0)
 430:	88 81       	ld	r24, Y
 432:	88 23       	and	r24, r24
 434:	91 f0       	breq	.+36     	; 0x45a <LCD_WriteString+0x30>
 436:	8f e3       	ldi	r24, 0x3F	; 63
 438:	9c e9       	ldi	r25, 0x9C	; 156
 43a:	01 97       	sbiw	r24, 0x01	; 1
 43c:	f1 f7       	brne	.-4      	; 0x43a <LCD_WriteString+0x10>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <LCD_WriteString+0x16>
 440:	00 00       	nop
	{
		_delay_ms(10);
		LCD_WriteData(*String);
 442:	89 91       	ld	r24, Y+
 444:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_WriteData>
 448:	8f e3       	ldi	r24, 0x3F	; 63
 44a:	9c e9       	ldi	r25, 0x9C	; 156
 44c:	01 97       	sbiw	r24, 0x01	; 1
 44e:	f1 f7       	brne	.-4      	; 0x44c <LCD_WriteString+0x22>
 450:	00 c0       	rjmp	.+0      	; 0x452 <LCD_WriteString+0x28>
 452:	00 00       	nop
	_delay_ms(10);
}

void LCD_WriteString(uint8 *String)
{
	while((*String) != 0)
 454:	88 81       	ld	r24, Y
 456:	81 11       	cpse	r24, r1
 458:	ee cf       	rjmp	.-36     	; 0x436 <LCD_WriteString+0xc>
		_delay_ms(10);
		LCD_WriteData(*String);
		_delay_ms(10);
		String++;
	}
}
 45a:	df 91       	pop	r29
 45c:	cf 91       	pop	r28
 45e:	08 95       	ret

00000460 <LCD_GoToRowColumn>:
}

void LCD_GoToRowColumn(uint8 row, uint8 col)
{
	uint8 Address=0;
	switch(row)
 460:	88 23       	and	r24, r24
 462:	29 f0       	breq	.+10     	; 0x46e <LCD_GoToRowColumn+0xe>
 464:	81 30       	cpi	r24, 0x01	; 1
 466:	11 f4       	brne	.+4      	; 0x46c <LCD_GoToRowColumn+0xc>
	{
		case 0:
		Address=col;
		break;
		case 1:
		Address=col+0x40;
 468:	60 5c       	subi	r22, 0xC0	; 192
		break;
 46a:	01 c0       	rjmp	.+2      	; 0x46e <LCD_GoToRowColumn+0xe>
	_delay_ms(10);
}

void LCD_GoToRowColumn(uint8 row, uint8 col)
{
	uint8 Address=0;
 46c:	60 e0       	ldi	r22, 0x00	; 0
		Address=col+0x40;
		break;
		
	}
	
	LCD_WriteCommand(Address | 0x80);
 46e:	86 2f       	mov	r24, r22
 470:	80 68       	ori	r24, 0x80	; 128
 472:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_WriteCommand>
 476:	08 95       	ret

00000478 <main>:



int main()
{
	Dio_init();
 478:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <Dio_init>
	LCD_int();
 47c:	0e 94 9c 01 	call	0x338	; 0x338 <LCD_int>
	while(1)
	{
		LCD_Clear();
 480:	0e 94 bc 01 	call	0x378	; 0x378 <LCD_Clear>
 484:	2f ef       	ldi	r18, 0xFF	; 255
 486:	89 e6       	ldi	r24, 0x69	; 105
 488:	98 e1       	ldi	r25, 0x18	; 24
 48a:	21 50       	subi	r18, 0x01	; 1
 48c:	80 40       	sbci	r24, 0x00	; 0
 48e:	90 40       	sbci	r25, 0x00	; 0
 490:	e1 f7       	brne	.-8      	; 0x48a <main+0x12>
 492:	00 c0       	rjmp	.+0      	; 0x494 <main+0x1c>
 494:	00 00       	nop
		_delay_ms(500);
		LCD_WriteString("Welcome Ali");
 496:	80 ea       	ldi	r24, 0xA0	; 160
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	0e 94 15 02 	call	0x42a	; 0x42a <LCD_WriteString>
 49e:	2f ef       	ldi	r18, 0xFF	; 255
 4a0:	83 ed       	ldi	r24, 0xD3	; 211
 4a2:	90 e3       	ldi	r25, 0x30	; 48
 4a4:	21 50       	subi	r18, 0x01	; 1
 4a6:	80 40       	sbci	r24, 0x00	; 0
 4a8:	90 40       	sbci	r25, 0x00	; 0
 4aa:	e1 f7       	brne	.-8      	; 0x4a4 <main+0x2c>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <main+0x36>
 4ae:	00 00       	nop
		_delay_ms(1000);
		LCD_Clear();
 4b0:	0e 94 bc 01 	call	0x378	; 0x378 <LCD_Clear>
 4b4:	2f ef       	ldi	r18, 0xFF	; 255
 4b6:	89 e6       	ldi	r24, 0x69	; 105
 4b8:	98 e1       	ldi	r25, 0x18	; 24
 4ba:	21 50       	subi	r18, 0x01	; 1
 4bc:	80 40       	sbci	r24, 0x00	; 0
 4be:	90 40       	sbci	r25, 0x00	; 0
 4c0:	e1 f7       	brne	.-8      	; 0x4ba <main+0x42>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <main+0x4c>
 4c4:	00 00       	nop
		_delay_ms(500);
		LCD_GoToRowColumn(1,5);
 4c6:	65 e0       	ldi	r22, 0x05	; 5
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	0e 94 30 02 	call	0x460	; 0x460 <LCD_GoToRowColumn>
		LCD_WriteData('A');
 4ce:	81 e4       	ldi	r24, 0x41	; 65
 4d0:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_WriteData>
 4d4:	2f ef       	ldi	r18, 0xFF	; 255
 4d6:	83 ed       	ldi	r24, 0xD3	; 211
 4d8:	90 e3       	ldi	r25, 0x30	; 48
 4da:	21 50       	subi	r18, 0x01	; 1
 4dc:	80 40       	sbci	r24, 0x00	; 0
 4de:	90 40       	sbci	r25, 0x00	; 0
 4e0:	e1 f7       	brne	.-8      	; 0x4da <main+0x62>
 4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <main+0x6c>
 4e4:	00 00       	nop
 4e6:	cc cf       	rjmp	.-104    	; 0x480 <main+0x8>

000004e8 <_exit>:
 4e8:	f8 94       	cli

000004ea <__stop_program>:
 4ea:	ff cf       	rjmp	.-2      	; 0x4ea <__stop_program>
